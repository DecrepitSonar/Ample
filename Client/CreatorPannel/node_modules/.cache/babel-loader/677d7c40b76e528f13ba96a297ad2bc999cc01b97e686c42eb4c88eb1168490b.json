{"ast":null,"code":"var _jsxFileName = \"/Users/robertaubow/Dev/Alto/Client/CreatorPannel/src/context/AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const login = async (email, password) => {\n    // This is where you would typically make an API call to authenticate\n    // For demo purposes, we'll just simulate a successful login\n    if (email && password) {\n      setUser({\n        email,\n        name: 'Demo User',\n        role: 'Creator',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n      });\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error('Invalid credentials'));\n  };\n  const logout = () => {\n    setUser(null);\n  };\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_s(AuthProvider, \"Iei9RGtZU29Y1RhBe1sbfh/MntA=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","login","email","password","name","role","avatar","Promise","resolve","reject","Error","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["/Users/robertaubow/Dev/Alto/Client/CreatorPannel/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst AuthContext = createContext(null);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n\n  const login = async (email, password) => {\n    // This is where you would typically make an API call to authenticate\n    // For demo purposes, we'll just simulate a successful login\n    if (email && password) {\n      setUser({\n        email,\n        name: 'Demo User',\n        role: 'Creator',\n        avatar: 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80'\n      });\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error('Invalid credentials'));\n  };\n\n  const logout = () => {\n    setUser(null);\n  };\n\n  const value = {\n    user,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}; "],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC;IACA;IACA,IAAID,KAAK,IAAIC,QAAQ,EAAE;MACrBH,OAAO,CAAC;QACNE,KAAK;QACLE,IAAI,EAAE,WAAW;QACjBC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACV,CAAC,CAAC;MACF,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,OAAOD,OAAO,CAACE,MAAM,CAAC,IAAIC,KAAK,CAAC,qBAAqB,CAAC,CAAC;EACzD,CAAC;EAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnBX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMY,KAAK,GAAG;IACZb,IAAI;IACJE,KAAK;IACLU,MAAM;IACNE,eAAe,EAAE,CAAC,CAACd;EACrB,CAAC;EAED,oBAAOL,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAf,QAAA,EAAEA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E,CAAC;AAACpB,EAAA,CA9BWF,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAgCzB,OAAO,MAAMwB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG/B,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAAC2B,OAAO,EAAE;IACZ,MAAM,IAAIZ,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOY,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}